name: Build paper

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Configure Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle (优化版本)
        run: |
          chmod +x gradlew 
          ./gradlew clean 
          ./gradlew applyPatches
          # 尝试构建普通服务器 JAR 而不是 paperclip
          ./gradlew :paper-server:build

      - name: Prepare server.jar
        id: prepare_jar
        run: |
          # 查找重新混淆后的服务器 JAR（较小）
          JAR_PATH=$(find . -path "*/build/libs/*" -name "paper-*.jar" ! -name "*sources*" ! -name "*javadoc*" ! -name "*mojmap*" ! -name "*paperclip*" | head -n 1)
          
          if [ -z "$JAR_PATH" ]; then
            echo "普通 JAR 未找到，尝试其他路径..."
            JAR_PATH=$(find . -name "paper-*.jar" ! -name "*sources*" ! -name "*javadoc*" ! -name "*mojmap*" | head -n 1)
          fi
          
          if [ -z "$JAR_PATH" ]; then
            echo "No JAR file found! Listing all jars:"
            find . -name "*.jar" -type f
            exit 1
          fi
          
          echo "Found JAR: $JAR_PATH"
          echo "Size: $(ls -lh "$JAR_PATH" | awk '{print $5}')"
          cp "$JAR_PATH" ./server.jar
          echo "JAR_SIZE=$(ls -lh ./server.jar | awk '{print $5}')" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-jar
          path: server.jar
          retention-days: 30

  # 如果普通构建失败，回退到 mojmap 构建
  build-fallback:
    needs: build
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Build with Gradle (回退方案)
        run: |
          chmod +x gradlew 
          ./gradlew clean 
          ./gradlew applyPatches
          ./gradlew createMojmapPaperclipJar

      - name: Prepare server.jar from fallback
        id: prepare_fallback_jar
        run: |
          JAR_PATH=$(find . -name "paperclip-mojmap-*.jar" | head -n 1)
          if [ -z "$JAR_PATH" ]; then
            JAR_PATH=$(find paper-server/build/libs -name "*.jar" ! -name "*sources*" ! -name "*javadoc*" | head -n 1)
          fi
          cp "$JAR_PATH" ./server.jar
          echo "JAR_SIZE=$(ls -lh ./server.jar | awk '{print $5}')" >> $GITHUB_OUTPUT

      - name: Upload Fallback Artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-jar-fallback
          path: server.jar
          retention-days: 30

  release:
    needs: [build, build-fallback]
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      - name: Download Artifact (优先使用主构建)
        uses: actions/download-artifact@v4
        with:
          name: server-jar
          # 如果主构建不存在，会继续尝试下载回退版本

      - name: Download Fallback Artifact (如果需要)
        if: failure()
        uses: actions/download-artifact@v4
        with:
          name: server-jar-fallback

      - name: Ensure server.jar exists
        run: |
          if [ ! -f "server.jar" ]; then
            # 尝试查找任何 jar 文件
            FOUND_JAR=$(find . -name "*.jar" | head -n 1)
            if [ -n "$FOUND_JAR" ]; then
              cp "$FOUND_JAR" ./server.jar
            else
              echo "No server.jar found!"
              exit 1
            fi
          fi
          echo "Final server.jar size: $(ls -lh server.jar | awk '{print $5}')"

      - name: Create Release with server.jar
        uses: softprops/action-gh-release@v1
        with:
          files: server.jar
          tag_name: "build-${{ github.run_number }}"
          name: "Server ${{ github.run_number }}"
          body: |
            ## Server Build #${{ github.run_number }}
            
            **Build Info:**
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref }}
            - File Size: $(ls -lh server.jar | awk '{print $5}')
            
            **Installation:**
            1. Download `server.jar`
            2. Place in server directory
            3. Run: `java -Xmx2G -jar server.jar nogui`
            
            **Requirements:**
            - Java 21 or higher
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
